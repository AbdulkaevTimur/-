# Написать программу, которая читая символы из бесконечной последовательности
# (эмулируется конечным файлом, читающимся поблочно), распознает, преобразует и выводит на экран лексемы по
# определенному правилу. Лексемы разделены пробелами. Преобразование делать по возможности через словарь.
# Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа.
# Регулярные выражения использовать нельзя.
# Вариант 1.
# Натуральные числа. Выводит на экран четные цифры, стоящие на нечетных местах (в числе), повторяя каждую цифру так,
# чтобы число повторов равнялось номеру позиции цифры. Если позиция цифры больше 5, то цифры выводится прописью.

abc = {'0': 'ноль', '1': 'один', '2': 'два', '3': 'три', '4': 'четыре', '5': 'пять',
       '6': 'шесть', '7': 'семь', '8': 'восемь', '9': 'девять'}

buffer_len = 1       #Длина буфера
work_buffer = ""     #Буфер, в котором хранится число
buffer = []          #Буфер, в котором хранятся символы из файла
flag_start = False   #Переменная, используемая для нахождения числа (True - Первая цифра найдена,
                     #                                               False - Первая цифра не найдена)
flag_end = False     #Переменная, используемая для нахождения конца числа (True - Число окончательно найдено
                     #                                                     False - Число еще не закончилось)
flag = False         #Переменная, используемая для определения успешного нахождения цифр в числе (True - Цифры по условию задачи найдены, 
                     #                                                                            False - Цифры по условию задачи не найдены)
def check(wb, f):    #Функция, в которой находятся цифры по условию задачи
       for i in range(len(wb)):
              if (int(wb[i]) % 2 == 0) and (i % 2 == 0):
                     f = True
                     if (i <= 4):
                            print('Цифра:', wb[i] * (i + 1))
                     if (i > 4):
                            print('Цифра:', abc[wb[i]])
       return f

try:                                      #Пробуем открыть файл
       file = open('text.txt', 'r')
except IOError as e:                      #Если файл не найден, то получаем соответствующее сообщение
       print('Файл в директории отсутствует или имеет другое название.\n'
             'Добавьте файл с именем \'text.txt\' или переименуйте существующий.')
else:                                     #Если файл открылся, и имеет нужное название
       buffer = file.read(buffer_len)     #Читаем первый символ
       if len(buffer) == 0:               #Если символов нет, то получаем соответствующее сообщение
              print("Файл пустой. Введите данные в файл \'text.txt\'.")
       else:                              #Если символ есть, то выполняем сразу работу над ним
              while buffer:               #Пока буфер не пустой
                     if (buffer >= '0') and (buffer <= '9'):
                            work_buffer += buffer       #Прибавляем поблочно полученное значение, если символ - цифра
                            if work_buffer[0] == '0':   #Если первая цифра в числе '0', то обнуляем значение переменной
                                   flag_start = False
                                   work_buffer = ''
                            else:
                                   flag_start = True    #Если число начинается не с нуля, то ищется все число
                     elif flag_start:       #Встретив символ, проверяем, начиналось ли нахождение числа
                            flag_end = True      
                     if flag_start and flag_end:        #Если число нашлось
                            print('------------------\nЧисло:', work_buffer, '\n')    #Вывод найденного числа
                            flag = check(work_buffer, flag)    #Вызов функции, которая возвращает значение переменной flag
                            flag_start = False                 #Присваиваем первоначальные значения переменным
                            flag_end = False
                            work_buffer = ''
                     buffer = file.read(buffer_len)            #Читаем следующий блок
              if work_buffer != '':                            #Если все символы в файле являются одним числом
                     print('------------------\nЧисло:', work_buffer, '\n')
                     flag = check(work_buffer, flag)
              if not flag:                                     #Если цифры по условию задачи не найдены, но символы были
                     print('Нет чисел, удовлетворяющих условию.\n'
                            'Введите числа, удовлетворяющие условию задачи в файл \'text.txt\'.')
              else:
                     print('\nПрограмма завершила работу.')
file.close()         #Закрываем файл
